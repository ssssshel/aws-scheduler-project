# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: angelart
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: aws-scheduler-project
service: appointment-service

provider:
  name: aws
  runtime: nodejs22.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:*:*:table/appointments
        - arn:aws:dynamodb:*:*:table/appointments/index/ScheduleIdIndex

    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - arn:aws:sns:*:*:appointment_topic

    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource:
        - arn:aws:sqs:*:*:sqs_pe
        - arn:aws:sqs:*:*:sqs_cl
        - arn:aws:sqs:*:*:sqs_appointment_confirm

    - Effect: Allow
      Action:
        - events:PutEvents
      Resource:
        - arn:aws:events:*:*:event-bus/appointment_bus

    - Effect: Allow
      Action:
        - events:PutRule
        - events:PutTargets
      Resource:
        - arn:aws:events:*:*:rule/appointment_completed_rule_*

functions:
  Appointment:
    handler: src/lambdas/appointment.main
    environment:
      DYNAMODB_TABLE_NAME: appointments
      SNS_TOPIC_ARN: !Ref AppointmentTopic
    events:
      - http:
          path: appointments
          method: post
      - http:
          path: appointments/{insuredId}
          method: get
  AppointmentPe:
    handler: src/lambdas/appointment_pe.main
    environment:
      EVENT_BUS_NAME: !Ref AppointmentBus
      PE_DB_HOST: mysql-pe.ckfaiew8ufkl.us-east-1.rds.amazonaws.com
      PE_DB_USER: admin
      PE_DB_PASSWORD: jfHqlLquAB23FdpfpbEe
      PE_DB_NAME: appointments
    events:
      - sqs:
          arn: !GetAtt SqsPe.Arn
          batchSize: 5
  AppointmentCl:
    handler: src/lambdas/appointment_cl.main
    environment:
      EVENT_BUS_NAME: !Ref AppointmentBus
      CL_DB_HOST: mysql-cl.ckfaiew8ufkl.us-east-1.rds.amazonaws.com
      CL_DB_USER: admin
      CL_DB_PASSWORD: gl4hqZJlLjdvxnWCozTt
      CL_DB_NAME: appointments
    events:
      - sqs:
          arn: !GetAtt SqsCl.Arn
          batchSize: 5
  AppointmentConfirm:
    handler: src/lambdas/appointment_confirm.main
    environment:
      DYNAMODB_TABLE_NAME: appointments
      SQS_URL: !Ref SqsAppointmentConfirm
    events:
      - sqs:
          arn: !GetAtt SqsAppointmentConfirm.Arn
          batchSize: 5

resources:
  Resources:
    AppointmentBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: appointment_bus
    AppointmentCompletedRuleCl:
      Type: AWS::Events::Rule
      Properties:
        Name: appointment_completed_rule_cl
        EventBusName: !Ref AppointmentBus
        EventPattern:
          source:
            - appointment.service
          detail-type:
            - AppointmentCompleted
          detail:
            countryISO:
              - CL
        Targets:
          - Arn: !GetAtt SqsAppointmentConfirm.Arn
            Id: SqsAppointmentConfirmTarget
    AppointmentCompletedRulePe:
      Type: AWS::Events::Rule
      Properties:
        Name: appointment_completed_rule_pe
        EventBusName: !Ref AppointmentBus
        EventPattern:
          source:
            - appointment.service
          detail-type:
            - AppointmentCompleted
          detail:
            countryISO:
              - PE
        Targets:
          - Arn: !GetAtt SqsAppointmentConfirm.Arn
            Id: SqsAppointmentConfirmTarget
    AppointmentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: appointments
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: insuredId
            AttributeType: S
          - AttributeName: scheduleId
            AttributeType: N
        KeySchema:
          - AttributeName: insuredId
            KeyType: HASH
          - AttributeName: scheduleId
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: ScheduleIdIndex
            KeySchema:
              - AttributeName: scheduleId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    AppointmentTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: appointment_topic
    SqsPe:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sqs_pe
        MessageRetentionPeriod: 86400
    SqsCl:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sqs_cl
        MessageRetentionPeriod: 86400
    SqsAppointmentConfirm:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sqs_appointment_confirm
    SnsPeSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref AppointmentTopic
        Protocol: sqs
        Endpoint: !GetAtt SqsPe.Arn
        FilterPolicy:
          countryISO:
            - PE
    SnsClSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref AppointmentTopic
        Protocol: sqs
        Endpoint: !GetAtt SqsCl.Arn
        FilterPolicy:
          countryISO:
            - CL
    SqsPePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - !Ref SqsPe
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action:
                - sqs:SendMessage
              Resource: !GetAtt SqsPe.Arn
              Condition:
                StringEquals:
                  aws:SourceArn: !Ref AppointmentTopic
    SqsClPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - !Ref SqsCl
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action:
                - sqs:SendMessage
              Resource: !GetAtt SqsCl.Arn
              Condition:
                StringEquals:
                  aws:SourceArn: !Ref AppointmentTopic
    SqsAppointmentConfirmPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - !Ref SqsAppointmentConfirm
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: events.amazonaws.com
              Action:
                - sqs:SendMessage
              Resource: !GetAtt SqsAppointmentConfirm.Arn

plugins:
  - serverless-offline
  - serverless-offline-sns
  - serverless-offline-sqs

custom:
  serverless-offline:
    httpPort: 3000
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude: ["aws-sdk"]
    target: "node22"
    define: { "require.resolve": undefined }
    platform: "node"
    concurrency: 10
